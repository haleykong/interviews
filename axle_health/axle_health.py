# Axle Health################################################################################ Scheduling with Time Groups# - See screenshots for prompt# - Below is psuedocodeclass TimeRange:    """Contains start time and end time    """    def __init__(self, start_time, end_time):        self.start_time = start_time        self.end_time = end_timeclass TimeGroup:    """Maintain and validate time ranges    """    def __init__(self, time_range):        self.time_range = []    def add_range(self, time_range):        # Check and handle overlap        if self._range_overlap:            # Update time ranges            pass        # Determine insertion index of new time_range        # Iterate over time ranges until start_time is after curr time range's        # start time        self.time_ranges.append(time_range)    def _range_overlap(self):        # Iterate over the existing time ranges and check if overlap        for r in self.time_range:            # Check if start time is in between time range            return True        return False    def remove_range(self, time_range):        # Check for range overlap and remove only the overlap portion        # Handle the bisection of time range        if time_range in self.time_range:            self.time_range.remove(time_range)    def return_time_ranges(self):        # Sort inputs        return self.time_range